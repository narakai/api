  swagger: '2.0'
  
  # This is your document metadata
  info:
    version: "0.0.1"
    title: YoBook API List
  # domain
  host: localhost:9527
  # Describe your paths here
  schemes:
    - http
  paths:
    /healthcheck:
      get:
        tags:
          - system
          - get
        summary: 获取服务器时间
        responses:
          200:
            description: 服务器正常
    /users:
      post:
        tags:
          - user
          - post
        summary: 用户注册
        parameters:
          - in: body
            name: body
            description: 注册用户的信息
            required: true
            schema:
              $ref: '#/definitions/CreateUserRequest'
        responses:
          201:
            description: 注册成功
            schema: 
              $ref: '#/definitions/User'
          409:
            description: 用户名重复
            schema:
              $ref: '#/definitions/Error'
          400:
            description: 请求错误
            schema: 
              type: array
              items:
                $ref: '#/definitions/BadRequest'
    /users/geosearch:
      get:
        tags:
          - user
          - get
          - geo
        summary: 按照地理位置查找用户
        produces:
          - application/json
        parameters:
          - in: query
            name: longitude
            description: 经度
            required: true
            type: number
          - in: query
            name: latitude
            description: 纬度
            required: true
            type: number
          - in: query
            name: radius
            description: 半径
            required: true
            type: number
        responses:
          200:
            description: 找到半径内的用户
            schema: 
              type: array
              items:
                $ref: '#/definitions/User'
          400:
            description: 参数错误
            schema:
              $ref: '#/definitions/BadRequest'
          404:
            description: 一个都没找到
            schema:
              $ref: '#/definitions/Error'
    /books:
      post:
        tags:
          - book
          - post
          - done
        summary: 新建图书
        produces:
          - application/json
        parameters:
          - name: body
            in: body
            description: Created user object
            required: true
            schema:
              $ref: '#/definitions/createBookRequest'
        responses:
          201:
            description: 创建成功
            schema:
              $ref: '#/definitions/Book'
          400:
            description: 失败，携带参数有错误
            schema:
              type: array
              items:
                $ref: '#/definitions/BadRequest'
          403:
            description: 用户没有权限，没有登陆
            schema:
              $ref: '#/definitions/Error'
      get:
        tags:
          - book
          - get
          - done
        summary: 根据条件查询图书
        produces:
          - application/json
        parameters:
        - name: name
          in: query
          description: 希望查询书籍的名称
          type: string
        - name: sn
          in: query
          description: 希望查询书籍的序列号
          type: string
        responses:
          200:
            description: 找到图书了
            schema: 
              type: array
              items:
                $ref: '#/definitions/Book'
          404:
            description: 没有能根据查询条件找到相关书籍
            schema: 
              $ref: '#/definitions/Error'
    /books/{_id}:
      get:
        tags:
          - book
          - get
          - done
        summary: 获取指定的书籍
        produces:
          - application/json
        parameters:
          - name: _id
            in: path
            description: 书籍的唯一id 
            type: string
        responses:
          200:
            description: 找到指定id的书籍
            schema:
              $ref: '#/definitions/Book'
          404:
            description: 未找到指定id的书籍
            schema: 
              $ref: '#/definitions/Error'
  definitions:
    User:
      properties:
        name:
          type: string
          description: 用户昵称
        from: 
          type: string
          description: 来源
        uuid:
          type: string
          description: 来源uuid
        access_token:
          type: string
          description: token
        qq:
          type: string
          description: qq
        wantedList:
          type: array
          items: 
            $ref: '#/definitions/Book'
        location:
          description: <longitude, latitude>
          type: array
          items:
            type: integer
    CreateUserRequest:
      properties:
        name: 
          type: string
          description: 用户昵称，全局唯一
        from: 
          type: string
          description: 用户的来源。因为是Oauth，有可能会集成更多的接口，需要指明来源
        uuid:
          type: string
          description: 用户在平台上的唯一ID，如QQ的open id，通过这个uuid来定位是否用户在本平台有注册
        access_token:
          type: string
          description: 用户鉴权成功后的token
    createBookRequest:
      properties:
        name:
          type: string
          description: 书籍名称
        sn:
          type: string
          description: 序列号， 可以填写CN\ ISSN \ISBN等
        summary:
          type: string
          descrition: 书籍简介
    BadRequest:
      properties:
        param:
          type: string
          description: 错误参数
        msg:
          type: string
          description: 错误信息
        value: 
          type: string
          description: 提供的值
    Error:
      properties:
        message:
          type: string
          description: 错误信息描述
    WantedList:
      properties:
        id: 
          type: integer
          description: 主键id
        books:
          type: array
          items:
            $ref: '#/definitions/Book'
    Book:
      properties:
        id:
          type: string
          description: 书籍唯一id
        sn:
          type: string
          description: 序列号， 可以填写CN\ ISSN \ISBN等
        name:
          type: string
          description: 书籍名称
        summary:
          type: string
          descrition: 书籍简介